CREATE TYPE frequency_enum AS ENUM ('daily', 'weekly', 'biweekly', 'monthly', 'bimonthly', 'yearly');

create table
  public.chore (
    id bigint generated by default as identity not null,
    name text null,
    location_in_house text null,
    frequency public.frequency_enum null,
    duration_mins bigint null default '0'::bigint,
    priority integer null,
    due_date date null,
    constraint chore_pkey primary key (id),
    constraint chore_priority_check check (
      (
        (priority >= 1)
        and (priority <= 5)
      )
    )
  ) tablespace pg_default;

-- Insert pre-populated data into the chore table
INSERT INTO public.chore (name, location_in_house, frequency, duration_mins, priority, due_date)
VALUES 
    ('Mop floors', 'Living Room', 'weekly', 30, 3, '2024-11-01'),
    ('Wash dishes', 'Kitchen', 'daily', 10, 2, '2024-10-28'), 
    ('Vacuum', 'Living Room', 'weekly', 10, 4, '2024-10-5'),
    ('Clean Kitchen', 'Kitchen', 'monthly', 30, 3, '2024-10-12');

create table
  public.roommate (
    id bigint generated by default as identity not null,
    first_name text null,
    last_name text null,
    email text null,
    constraint roommate_pkey primary key (id)
  ) tablespace pg_default;
  
-- Insert pre-populated data into the roommate table
INSERT INTO public.roommate (id,first_name, last_name, email)
VALUES 
    (100, 'Sarah', 'LeGoat', 'sarah@gmail.com'),
    (101, 'Billy', 'LeGoat', 'billy@gmail.com'),
    (102, 'Jake', 'LeGoat', 'jake@gmail.com');

create table
  public.chore_assignment (
    id bigint generated by default as identity not null,
    chore_id bigint null,
    roommate_id bigint null,
    status text null,
    constraint chore_assignment_pkey primary key (id),
    constraint chore_assignment_chore_id_fkey foreign key (chore_id) references chore (id),
    constraint chore_assignment_roommate_id_fkey foreign key (roommate_id) references roommate (id),
    constraint status_check check (
      (
        status = any (
          array[
            'pending'::text,
            'in_progress'::text,
            'completed'::text
          ]
        )
      )
    )
  ) tablespace pg_default;

CREATE TYPE bill_type_enum AS ENUM ('electricity', 'water', 'internet', 'rent','gas','trash','groceries');

create table
  public.bill (
    id bigint generated by default as identity not null,
    cost double precision null,
    due_date timestamp with time zone null default (now() at time zone 'utc'::text),
    bill_type public.bill_type_enum null,
    message text null,
    constraint bill_pkey primary key (id)
  ) tablespace pg_default;

create TYPE status_enum AS ENUM('unpaid', 'paid', 'overdue');

create table
  public.bill_list (
    id bigint generated by default as identity not null,
    bill_id bigint null,
    roommate_id bigint null,
    status public.status_enum null,
    amount real not null default '0'::real,
    constraint bill_list_pkey primary key (id),
    constraint bill_list_bill_id_fkey foreign key (bill_id) references bill (id)
  ) tablespace pg_default;
